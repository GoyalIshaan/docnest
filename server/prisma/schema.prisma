generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  username      String     @unique
  email         String     @unique
  password      String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  documents     Document[] @relation("OwnedDocuments")
  sharedDocs    Document[] @relation("SharedDocuments")
  comments      Comment[]
}

model Document {
  id          String   @id @default(uuid())
  title       String @default("Untitled Document")
  content     Bytes
  summary     String @default("")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       User     @relation("OwnedDocuments", fields: [ownerId], references: [id])
  ownerId     String
  sharedWith  User[]   @relation("SharedDocuments")
  comments    Comment[]
}

model Comment {
  id          String   @id @default(uuid())
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  document    Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  documentId  String
  startIndex  Int?     
  endIndex    Int?     
  status      CommentStatus @default(ACTIVE)
  parentId    String?  
  parent      Comment? @relation("CommentThread", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  replies     Comment[] @relation("CommentThread")

  @@index([documentId, status])
}

enum CommentStatus {
  ACTIVE
  RESOLVED
  DELETED
}